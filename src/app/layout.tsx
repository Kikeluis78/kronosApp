// ===============================
// RootLayout.tsx
// Controla la estructura global de la app, fuentes y providers
// ===============================

import { auth } from '@/auth'; // Función para obtener la sesión del usuario
import ClientProviders from '@/providers'; // Contexto global de la app (NextAuth, etc.)
import '@worldcoin/mini-apps-ui-kit-react/styles.css'; // Estilos del Mini Apps UI Kit
import type { Metadata } from 'next';
import type { HTMLAttributes } from 'react'; // <- Corregido: HTMLAttributes viene de React
import { Geist, Geist_Mono } from 'next/font/google'; // Fuentes de Google
import './globals.css'; // Estilos globales personalizados

// -------------------------------
// Definición de fuentes Geist
// -------------------------------
const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

// -------------------------------
// Metadata de la app
// -------------------------------
export const metadata: Metadata = {
  title: 'Template Mini App',
  description: 'Generated by create next app',
};

// -------------------------------
// Props tipadas para RootLayout
// -------------------------------
interface RootLayoutProps extends HTMLAttributes<HTMLDivElement> {
  children: React.ReactNode;
}

// ================================
// RootLayout
// Contenedor global que envuelve toda la app
// ================================
export default async function RootLayout({ children }: Readonly<RootLayoutProps>) {
  // -------------------------------
  // Obtener sesión del usuario
  // session contiene datos como username, avatar, etc.
  // -------------------------------
  const session = await auth();

  return (
    <html lang="en">
      {/* ================================
          Body global
          - Variables de fuente
          - Fondo y color de texto global
      ================================ */}
      <body className={`${geistSans.variable} ${geistMono.variable} bg-gray-50 text-gray-900`}>
        {/* ================================
            ClientProviders
            - Provee contexto global (auth, theme, etc.)
        ================================ */}
        <ClientProviders session={session}>
          {/* ================================
              Contenedor principal
              - min-h-screen asegura altura completa
              - flex flex-col permite layout vertical
              - children: renderiza páginas hijas
          ================================ */}
          <div className="min-h-screen flex flex-col">
            {children}
          </div>
        </ClientProviders>
      </body>
    </html>
  );
}
